#!/bin/bash

key_file="${OPENAI_KEY_FILE:-.openai-proxy-details}"

function update() {
  local verbose=$1
  local response
  
  response=$(curl -s 'https://openai-proxy.shopify.io/hmac/personal' \
      -X 'POST' \
      -H 'content-type: application/json' \
      -H "Authorization: Bearer $(gcloud auth print-identity-token)" \
      -o "$HOME/$key_file")

  if [[ $verbose = "-v" ]]; then
    echo "Key updated and saved to $HOME/$key_file"
    jq . < "$HOME/$key_file"  # Pretty print the JSON if verbose
  fi

  return 0
}

function check() {
    local verbose=$1
    if [[ ! -f "$HOME/$key_file" ]]; then
      return 1
    fi

    lastModificationSeconds=$(date -r $HOME/$key_file +%s)
    currentSeconds=$(date +%s)
    ((elapsedSeconds = currentSeconds - lastModificationSeconds))
    (( timeLeft = 70000 - elapsedSeconds ))

    if (( elapsedSeconds > 70000 )); then
      if [[ $verbose = "-v" ]]; then
        echo "Key expired by $timeLeft seconds"
      fi
      return 1
    else
      if [[ $verbose = "-v" ]]; then
        echo "Key is still valid for $timeLeft seconds"
      fi
      return 0
    fi

    return 0
}

case $1 in
  update)
    update "$2"  # Pass the second argument (which could be -v)
    ;;
  check)
    check "$2"
    ;;
  cat)
    check || update "$2"
    jq -r .key < "$HOME/$key_file"
    ;;
  env)
    check || update "$2"
    export OPENAI_API_KEY=$(jq -r .key < "$HOME/$key_file")
    echo "OPENAI_API_KEY has been set"
    ;;
  *)
    echo "Usage: $0 {update|check|cat|env} [-v]"
    exit 1
    ;;
esac
